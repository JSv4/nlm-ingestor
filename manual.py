import base64
import io
import json
import os
import uuid
import zipfile

import nltk

from nlm_ingestor.datatypes.dicts import AnnotationLabelPythonType, OpenContractsExportDataJsonPythonType, \
    OpenContractsLabelSetType, OpenContractCorpusType
from nlm_ingestor.datatypes.enums import BlockTypes, LabelType
from nlm_ingestor.file_parser import markdown_parser

nltk.download('punkt')
nltk.download('stopwords')

import logging

logging.basicConfig(level=logging.INFO)
from nlm_ingestor.ingestor import pdf_ingestor

doc_loc = 'sample.pdf'


def generate_labels() -> dict[str, AnnotationLabelPythonType]:
    annotation_label_jsons: dict[str, AnnotationLabelPythonType] = {}
    for feature_name in BlockTypes:
        annotation_label_jsons[feature_name] = {
            "id": uuid.uuid4().__str__(),
            "color": "gray",
            "description": "Nlm-ingestor region",
            "icon": "expand",
            "text": f"{feature_name} block",
            "label_type": LabelType.TOKEN_LABEL.value
        }
    return annotation_label_jsons
annotation_label_jsons = generate_labels()

corpus_data: OpenContractCorpusType = {
    "id": 1,
    "title": f"Nlm-ingestor test for {doc_loc}",
    "description": "Externally prepared 'corpus' by nlm-ingestor",
    "icon_data": "",
    "icon_name": "icon.png",
    "creator": "scrudato@umich.edu",
    "label_set": 1
}

label_set: OpenContractsLabelSetType = {
    "id": 1,
    "title": "Nlmatics region labels",
    "description": "Nlmatics labelset for the Atticus Project's CUAD Corpus.",
    "icon_name": "f8282799-141f-4fed-9c0c-333f434e2831_AtticusProject.webp",
    "icon_data": "",
    "creator": "scrudato@umich.edu"
}

os.environ["TIKA_SERVER_ENDPOINT"] = "http://localhost:9998"


# This would be called by ingestor_api.py if mime_type == "application/pdf"
ingestor = pdf_ingestor.PDFIngestor(doc_loc, {"apply_ocr": True})
open_contracts_data = ingestor.open_contracts_data
print(open_contracts_data)

with open(doc_loc, 'rb') as pdf_file:
    pdf_data = pdf_file.read()
    pdf_base64 = base64.b64encode(pdf_data).decode("utf-8")

# Package labelset, document and annotations into OpenContracts format
data: OpenContractsExportDataJsonPythonType = {
    "annotated_docs": {doc_loc: open_contracts_data},
    "doc_labels": {},
    "text_labels": annotation_label_jsons,
    "corpus": corpus_data,
    "label_set": label_set
}

# package doc into OC Zip
output_bytes = io.BytesIO()
zip_file = zipfile.ZipFile(output_bytes, mode="w", compression=zipfile.ZIP_DEFLATED)
with open(doc_loc, 'rb') as pdf_file:

    # Write pdf file
    zip_file.writestr(doc_loc, pdf_file.read())

    # Write data file
    json_str = json.dumps(data) + "\n"
    json_bytes = json_str.encode("utf-8")
    zip_file.writestr("data.json", json_bytes)
    zip_file.close()

output_bytes.seek(io.SEEK_SET)
with open('nlm-processed-doc.zip', 'wb') as export_file:
    export_file.write(output_bytes.getvalue() )

with open("data.json", "w") as f:
    f.write(json.dumps(data, indent=4))
